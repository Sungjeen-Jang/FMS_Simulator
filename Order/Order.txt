현재 코드는 5초마다 주기적인 CD (Control Device)의 전송에 대해 PD가 응답을 하고, PD간 collision발생시 다음 CD에 대해 전송하는 방식을 시뮬레이션으로 구현한다.
그러나 실제 시스템에서는 다음의 시나리오를 생각할 수 있다.
처음 C신호 전송시(5초) PD의 신호가 하나 들어오면 다음 5초 때 해당 PD에 대한 Q신호를 CD가 전송한다.
즉, 이번 5초에서는 CD가 C를 전송하지 않는다.
다음 5초의 시간동안 PD2와 PD3가 충돌없이 P를 CD에게 전송하면 CD는 다음 5초 때 C가 아닌 Q를 전송한다.
다음 5초 동안 아무도 전송하지 않으면 CD는 다음 5초에 C신호를 전송한다.

즉,
5초에 CD가 C 신호 전송
5~10초 사이에 PD1이 P 전송
10초에 CD가 PD1에 대한 Q신호 전송
10~15초에 PD2, PD3가 충돌 없이 P 전송 (이건은 5초에 전송한 CD의 C 신호에 대한 응답)
15초에 CD가 PD2, PD3에 대한 Q 신호 전송
15~20초에 어떤 PD도 전송하지 않음
20초에 CD가 C 신호 전송

그리고 CD가 C신호를 전송하면 PD가 P신호를 자기 ID를 담아 전송하고 CD는 해당 ID를 Q신호에 담아 보내 PD는 자신의 P신호 전송이 완료됨을 확인할 수 있다.
CD가 C신호를 전송한 뒤 5초 안에 6개의 PD들로부터 P신호를 받으면 Q신호에 한꺼번에 6개까지의 PD ID들을 담아 보낼 수 있다.
그래서 Q신호의 길이는
PD ID 하나에 대해서만 전송할 때에는 패킷 길이가 47.36ms
PD ID 두 개에 대해서만 전송할 때에는 패킷 길이가 54.53ms
PD ID 세 개에 대해서만 전송할 때에는 패킷 길이가 61.69ms
PD ID 네 개에 대해서만 전송할 때에는 패킷 길이가 68.86ms
PD ID 다섯 개에 대해서만 전송할 때에는 패킷 길이가 76.03ms
PD ID 여섯 개에 대해서만 전송할 때에는 패킷 길이가 83.20ms
이 된다.

모두 같은 채널을 사용하기 때문에 C 신호와 P 신호가 collision이 될 수도 있고, P 신호끼리 collision이 될 수도 있고, Q와 P가 collision이 될 수도 있다.

이러한 내용들을 고려하여 코드를 수정해야 한다.